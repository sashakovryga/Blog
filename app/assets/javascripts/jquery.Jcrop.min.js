(function (e) {
    e.Jcrop = function (t, n) {
        function B(e) {
            return "" + parseInt(e) + "px"
        }

        function j(e) {
            return "" + parseInt(e) + "%"
        }

        function F(e) {
            return s.baseClass + "-" + e
        }

        function I(t) {
            var n = e(t).offset();
            return [n.left, n.top]
        }

        function q(e) {
            return [e.pageX - C[0], e.pageY - C[1]]
        }

        function R(e) {
            if (e != L) {
                P.setCursor(e);
                L = e
            }
        }

        function U(e, t) {
            C = I(u);
            P.setCursor(e == "move" ? e : e + "-resize");
            if (e == "move") return P.activateHandlers(W(t), Q);
            var n = _.getFixed();
            var r = X(e);
            var i = _.getCorner(X(r));
            _.setPressed(_.getCorner(r));
            _.setCurrent(i);
            P.activateHandlers(z(e, n), Q)
        }

        function z(e, t) {
            return function (n) {
                if (!s.aspectRatio) switch (e) {
                case "e":
                    n[1] = t.y2;
                    break;
                case "w":
                    n[1] = t.y2;
                    break;
                case "n":
                    n[0] = t.x2;
                    break;
                case "s":
                    n[0] = t.x2;
                    break
                } else switch (e) {
                case "e":
                    n[1] = t.y + 1;
                    break;
                case "w":
                    n[1] = t.y + 1;
                    break;
                case "n":
                    n[0] = t.x + 1;
                    break;
                case "s":
                    n[0] = t.x + 1;
                    break
                }
                _.setCurrent(n);
                D.update()
            }
        }

        function W(e) {
            var t = e;
            H.watchKeys();
            return function (e) {
                _.moveOffset([e[0] - t[0], e[1] - t[1]]);
                t = e;
                D.update()
            }
        }

        function X(e) {
            switch (e) {
            case "n":
                return "sw";
            case "s":
                return "nw";
            case "e":
                return "nw";
            case "w":
                return "ne";
            case "ne":
                return "sw";
            case "nw":
                return "se";
            case "se":
                return "nw";
            case "sw":
                return "ne"
            }
        }

        function V(e) {
            return function (t) {
                if (s.disabled) return false;
                if (e == "move" && !s.allowMove) return false;
                k = true;
                U(e, q(t));
                t.stopPropagation();
                t.preventDefault();
                return false
            }
        }

        function J(e, t, n) {
            var r = e.width(),
                i = e.height();
            if (r > t && t > 0) {
                r = t;
                i = t / e.width() * e.height()
            }
            if (i > n && n > 0) {
                i = n;
                r = n / e.height() * e.width()
            }
            x = e.width() / r;
            T = e.height() / i;
            e.width(r).height(i)
        }

        function K(e) {
            return {
                x: parseInt(e.x * x),
                y: parseInt(e.y * T),
                x2: parseInt(e.x2 * x),
                y2: parseInt(e.y2 * T),
                w: parseInt(e.w * x),
                h: parseInt(e.h * T)
            }
        }

        function Q(e) {
            var t = _.getFixed();
            if (t.w > s.minSelect[0] && t.h > s.minSelect[1]) {
                D.enableHandles();
                D.done()
            } else {
                D.release()
            }
            P.setCursor(s.allowSelect ? "crosshair" : "default")
        }

        function G(e) {
            if (s.disabled) return false;
            if (!s.allowSelect) return false;
            k = true;
            C = I(u);
            D.disableHandles();
            R("crosshair");
            var t = q(e);
            _.setPressed(t);
            P.activateHandlers(Y, Q);
            H.watchKeys();
            D.update();
            e.stopPropagation();
            e.preventDefault();
            return false
        }

        function Y(e) {
            _.setCurrent(e);
            D.update()
        }

        function Z() {
            var t = e("<div></div>").addClass(F("tracker"));
             t.css({
                opacity: 0,
                backgroundColor: "white"
            });
            return t
        }

        function et(e) {
            function b() {
                window.setTimeout(y, f)
            }
            var t = e[0] / x,
                n = e[1] / T,
                r = e[2] / x,
                i = e[3] / T;
            if (O) return;
            var o = _.flipCoords(t, n, r, i);
            var u = _.getFixed();
            var a = initcr = [u.x, u.y, u.x2, u.y2];
            var f = s.animationDelay;
            var l = a[0];
            var c = a[1];
            var r = a[2];
            var i = a[3];
            var h = o[0] - initcr[0];
            var p = o[1] - initcr[1];
            var d = o[2] - initcr[2];
            var v = o[3] - initcr[3];
            var m = 0;
            var g = s.swingSpeed;
            D.animMode(true);
            var y = function () {
                return function () {
                    m += (100 - m) / g;
                    a[0] = l + m / 100 * h;
                    a[1] = c + m / 100 * p;
                    a[2] = r + m / 100 * d;
                    a[3] = i + m / 100 * v;
                    if (m < 100) b();
                    else D.done(); if (m >= 99.8) m = 100;
                    nt(a)
                }
            }();
            b()
        }

        function tt(e) {
            nt([e[0] / x, e[1] / T, e[2] / x, e[3] / T])
        }

        function nt(e) {
            _.setPressed([e[0], e[1]]);
            _.setCurrent([e[2], e[3]]);
            D.update()
        }

        function rt(t) {
            if (typeof t != "object") t = {};
            s = e.extend(s, t);
            if (typeof s.onChange !== "function") s.onChange = function () {};
            if (typeof s.onSelect !== "function") s.onSelect = function () {}
        }

        function it() {
            return K(_.getFixed())
        }

        function st() {
            return _.getFixed()
        }

        function ot(e) {
            rt(e);
            ct()
        }

        function ut() {
            s.disabled = true;
            D.disableHandles();
            D.setCursor("default");
            P.setCursor("default")
        }

        function at() {
            s.disabled = false;
            ct()
        }

        function ft() {
            D.done();
            P.activateHandlers(null, null)
        }

        function lt() {
            l.remove();
            o.show()
        }

        function ct(e) {
            s.allowResize ? e ? D.enableOnly() : D.enableHandles() : D.disableHandles();
            P.setCursor(s.allowSelect ? "crosshair" : "default");
            D.setCursor(s.allowMove ? "move" : "default");
            l.css("backgroundColor", s.bgColor);
            if ("setSelect" in s) {
                tt(n.setSelect);
                D.done();
                delete s.setSelect
            }
            if ("trueSize" in s) {
                x = s.trueSize[0] / a;
                T = s.trueSize[1] / f
            }
            y = s.maxSize[0] || 0;
            b = s.maxSize[1] || 0;
            E = s.minSize[0] || 0;
            S = s.minSize[1] || 0;
            if ("outerImage" in s) {
                u.attr("src", s.outerImage);
                delete s.outerImage
            }
            D.refresh()
        }
        var t = t,
            n = n;
        if (typeof t !== "object") t = e(t)[0];
        if (typeof n !== "object") n = {};
        if (!("trackDocument" in n)) {
           
            n.trackDocument = true
        }
        if (!("keySupport" in n)) n.keySupport =  true;
        var r = {
            trackDocument: false,
            baseClass: "jcrop",
            addClass: null,
            bgColor: "black",
            bgOpacity: .6,
            borderOpacity: .4,
            handleOpacity: .5,
            handlePad: 5,
            handleSize: 9,
            handleOffset: 5,
            edgeMargin: 14,
            aspectRatio: 0,
            keySupport: true,
            cornerHandles: true,
            sideHandles: true,
            drawBorders: true,
            dragEdges: true,
            boxWidth: 0,
            boxHeight: 0,
            boundary: 8,
            animationDelay: 20,
            swingSpeed: 3,
            allowSelect: true,
            allowMove: true,
            allowResize: true,
            minSelect: [0, 0],
            maxSize: [0, 0],
            minSize: [0, 0],
            onChange: function () {},
            onSelect: function () {}
        };
        var s = r;
        rt(n);
        var o = e(t);
        var u = o.clone().removeAttr("id").css({
            position: "absolute"
        });
        u.width(o.width());
        u.height(o.height());
        o.after(u).hide();
        J(u, s.boxWidth, s.boxHeight);
        var a = u.width(),
            f = u.height(),
            l = e("<div />").width(a).height(f).addClass(F("holder")).css({
                position: "relative",
                backgroundColor: s.bgColor
            }).insertAfter(o).append(u);
        if (s.addClass) l.addClass(s.addClass);
        var c = e("<img />").attr("src", u.attr("src")).css("position", "absolute").width(a).height(f);
        var p = e("<div />").width(j(100)).height(j(100)).css({
            zIndex: 310,
            position: "absolute",
            overflow: "hidden"
        }).append(c);
        var d = e("<div />").width(j(100)).height(j(100)).css("zIndex", 320);
        var v = e("<div />").css({
            position: "absolute",
            zIndex: 300
        }).insertBefore(u).append(p, d);
        var m = s.boundary;
        var g = Z().width(a + m * 2).height(f + m * 2).css({
            position: "absolute",
            top: B(-m),
            left: B(-m),
            zIndex: 290
        }).mousedown(G);
        var y, b, E, S;
        var x, T, N = true;
        var C = I(u),
            k, L, A, O, M;
        var _ = function () {
            function u(i) {
                var i = m(i);
                n = e = i[0];
                r = t = i[1]
            }

            function l(e) {
                var e = m(e);
                i = e[0] - n;
                o = e[1] - r;
                n = e[0];
                r = e[1]
            }

            function c() {
                return [i, o]
            }

            function p(i) {
                var s = i[0],
                    o = i[1];
                if (0 > e + s) s -= s + e;
                if (0 > t + o) o -= o + t;
                if (f < r + o) o += f - (r + o);
                if (a < n + s) s += a - (n + s);
                e += s;
                n += s;
                t += o;
                r += o
            }

            function d(e) {
                var t = v();
                switch (e) {
                case "ne":
                    return [t.x2, t.y];
                case "nw":
                    return [t.x, t.y];
                case "se":
                    return [t.x2, t.y2];
                case "sw":
                    return [t.x, t.y2]
                }
            }

            function v() {
                if (!s.aspectRatio) return N();
                var i = s.aspectRatio,
                    o = s.minSize[0] / x,
                    u = s.minSize[1] / T,
                    l = s.maxSize[0] / x,
                    c = s.maxSize[1] / T,
                    p = n - e,
                    d = r - t,
                    v = Math.abs(p),
                    m = Math.abs(d),
                    y = v / m,
                    b, E;
                if (l == 0) {
                    l = a * 10
                }
                if (c == 0) {
                    c = f * 10
                }
                if (y < i) {
                    E = r;
                    w = m * i;
                    b = p < 0 ? e - w : w + e;
                    if (b < 0) {
                        b = 0;
                        h = Math.abs((b - e) / i);
                        E = d < 0 ? t - h : h + t
                    } else if (b > a) {
                        b = a;
                        h = Math.abs((b - e) / i);
                        E = d < 0 ? t - h : h + t
                    }
                } else {
                    b = n;
                    h = v / i;
                    E = d < 0 ? t - h : t + h;
                    if (E < 0) {
                        E = 0;
                        w = Math.abs((E - t) * i);
                        b = p < 0 ? e - w : w + e
                    } else if (E > f) {
                        E = f;
                        w = Math.abs(E - t) * i;
                        b = p < 0 ? e - w : w + e
                    }
                } if (b > e) {
                    if (b - e < o) {
                        b = e + o
                    } else if (b - e > l) {
                        b = e + l
                    }
                    if (E > t) {
                        E = t + (b - e) / i
                    } else {
                        E = t - (b - e) / i
                    }
                } else if (b < e) {
                    if (e - b < o) {
                        b = e - o
                    } else if (e - b > l) {
                        b = e - l
                    }
                    if (E > t) {
                        E = t + (e - b) / i
                    } else {
                        E = t - (e - b) / i
                    }
                }
                if (b < 0) {
                    e -= b;
                    b = 0
                } else if (b > a) {
                    e -= b - a;
                    b = a
                }
                if (E < 0) {
                    t -= E;
                    E = 0
                } else if (E > f) {
                    t -= E - f;
                    E = f
                }
                return last = C(g(e, t, b, E))
            }

            function m(e) {
                if (e[0] < 0) e[0] = 0;
                if (e[1] < 0) e[1] = 0;
                if (e[0] > a) e[0] = a;
                if (e[1] > f) e[1] = f;
                return [e[0], e[1]]
            }

            function g(e, t, n, r) {
                var i = e,
                    s = n,
                    o = t,
                    u = r;
                if (n < e) {
                    i = n;
                    s = e
                }
                if (r < t) {
                    o = r;
                    u = t
                }
                return [Math.round(i), Math.round(o), Math.round(s), Math.round(u)]
            }

            function N() {
                var i = n - e;
                var s = r - t;
                if (y && Math.abs(i) > y) n = i > 0 ? e + y : e - y;
                if (b && Math.abs(s) > b) r = s > 0 ? t + b : t - b;
                if (S && Math.abs(s) < S) r = s > 0 ? t + S : t - S;
                if (E && Math.abs(i) < E) n = i > 0 ? e + E : e - E;
                if (e < 0) {
                    n -= e;
                    e -= e
                }
                if (t < 0) {
                    r -= t;
                    t -= t
                }
                if (n < 0) {
                    e -= n;
                    n -= n
                }
                if (r < 0) {
                    t -= r;
                    r -= r
                }
                if (n > a) {
                    var o = n - a;
                    e -= o;
                    n -= o
                }
                if (r > f) {
                    var o = r - f;
                    t -= o;
                    r -= o
                }
                if (e > a) {
                    var o = e - f;
                    r -= o;
                    t -= o
                }
                if (t > f) {
                    var o = t - f;
                    r -= o;
                    t -= o
                }
                return C(g(e, t, n, r))
            }

            function C(e) {
                return {
                    x: e[0],
                    y: e[1],
                    x2: e[2],
                    y2: e[3],
                    w: e[2] - e[0],
                    h: e[3] - e[1]
                }
            }
            var e = 0,
                t = 0,
                n = 0,
                r = 0,
                i, o;
            return {
                flipCoords: g,
                setPressed: u,
                setCurrent: l,
                getOffset: c,
                moveOffset: p,
                getCorner: d,
                getFixed: v
            }
        }();
        var D = function () {
            function g(t) {
                var n = e("<div />").css({
                    position: "absolute",
                    opacity: s.borderOpacity
                }).addClass(F(t));
                p.append(n);
                return n
            }

            function y(t, n) {
                var r = e("<div />").mousedown(V(t)).css({
                    cursor: t + "-resize",
                    position: "absolute",
                    zIndex: n
                });
                d.append(r);
                return r
            }

            function b(e) {
                return y(e, a++).css({
                    top: B(-m + 1),
                    left: B(-m + 1),
                    opacity: s.handleOpacity
                }).addClass(F("handle"))
            }

            function w(e) {
                var t = s.handleSize,
                    n = m,
                    r = t,
                    i = t,
                    o = n,
                    u = n;
                switch (e) {
                case "n":
                case "s":
                    i = j(100);
                    break;
                case "e":
                case "w":
                    r = j(100);
                    break
                }
                return y(e, a++).width(i).height(r).css({
                    top: B(-o + 1),
                    left: B(-u + 1)
                })
            }

            function E(e) {
                for (i in e) l[e[i]] = b(e[i])
            }

            function S(e) {
                var t = Math.round(e.h / 2 - m),
                    n = Math.round(e.w / 2 - m),
                    r = west = -m + 1,
                    i = e.w - m,
                    s = e.h - m,
                    o, u;
                "e" in l && l.e.css({
                    top: B(t),
                    left: B(i)
                }) && l.w.css({
                    top: B(t)
                }) && l.s.css({
                    top: B(s),
                    left: B(n)
                }) && l.n.css({
                    left: B(n)
                });
                "ne" in l && l.ne.css({
                    left: B(i)
                }) && l.se.css({
                    top: B(s),
                    left: B(i)
                }) && l.sw.css({
                    top: B(s)
                });
                "b" in l && l.b.css({
                    top: B(s)
                }) && l.r.css({
                    left: B(i)
                })
            }

            function x(e, t) {
                c.css({
                    top: B(-t),
                    left: B(-e)
                });
                v.css({
                    top: B(t),
                    left: B(e)
                })
            }

            function T(e, t) {
                v.width(e).height(t)
            }

            function N() {
                var e = _.getFixed();
                _.setPressed([e.x, e.y]);
                _.setCurrent([e.x2, e.y2]);
                C()
            }

            function C() {
                if (o) return k()
            }

            function k() {
                var e = _.getFixed();
                T(e.w, e.h);
                x(e.x, e.y);
                s.drawBorders && f["right"].css({
                    left: B(e.w - 1)
                }) && f["bottom"].css({
                    top: B(e.h - 1)
                });
                h && S(e);
                o || L();
                s.onChange(K(e))
            }

            function L() {
                v.show();
                u.css("opacity", s.bgOpacity);
                o = true
            }

            function A() {
                P();
                v.hide();
                u.css("opacity", 1);
                o = false
            }

            function M() {
                if (h) {
                    S(_.getFixed());
                    d.show()
                }
            }

            function D() {
                h = true;
                if (s.allowResize) {
                    S(_.getFixed());
                    d.show();
                    return true
                }
            }

            function P() {
                h = false;
                d.hide()
            }

            function H(e) {
                (O = e) ? P() : D()
            }

            function I() {
                H(false);
                N()
            }
            var t, n, r, o, a = 370;
            var f = {};
            var l = {};
            var h = false;
            var m = s.handleOffset;
            if (s.drawBorders) {
                f = {
                    top: g("hline").css("top", B(-1)),
                    bottom: g("hline"),
                    left: g("vline"),
                    right: g("vline")
                }
            }
            if (s.dragEdges) {
                l.t = w("n");
                l.b = w("s");
                l.r = w("e");
                l.l = w("w")
            }
            s.sideHandles && E(["n", "s", "e", "w"]);
            s.cornerHandles && E(["sw", "nw", "ne", "se"]);
            var q = Z().mousedown(V("move")).css({
                cursor: "move",
                position: "absolute",
                zIndex: 360
            });
            p.append(q);
            P();
            return {
                updateVisible: C,
                update: k,
                release: A,
                refresh: N,
                setCursor: function (e) {
                    q.css("cursor", e)
                },
                enableHandles: D,
                enableOnly: function () {
                    h = true
                },
                showHandles: M,
                disableHandles: P,
                animMode: H,
                done: I
            }
        }();
        var P = function () {
            function i() {
                g.css({
                    zIndex: 450
                });
                if (r) {
                    e(document).mousemove(a).mouseup(f)
                }
            }

            function o() {
                g.css({
                    zIndex: 290
                });
                if (r) {
                    e(document).unbind("mousemove", a).unbind("mouseup", f)
                }
            }

            function a(e) {
                t(q(e))
            }

            function f(e) {
                e.preventDefault();
                e.stopPropagation();
                if (k) {
                    k = false;
                    n(q(e));
                    s.onSelect(K(_.getFixed()));
                    o();
                    t = function () {};
                    n = function () {}
                }
                return false
            }

            function l(e, r) {
                k = true;
                t = e;
                n = r;
                i();
                return false
            }

            function c(e) {
                g.css("cursor", e)
            }
            var t = function () {}, n = function () {}, r = s.trackDocument;
            if (!r) {
                g.mousemove(a).mouseup(f).mouseout(f)
            }
            u.before(g);
            return {
                activateHandlers: l,
                setCursor: c
            }
        }();
        var H = function () {
            function r() {
                if (s.keySupport) {
                    t.show();
                    t.focus()
                }
            }

            function i(e) {
                t.hide()
            }

            function o(e, t, n) {
                if (s.allowMove) {
                    _.moveOffset([t, n]);
                    D.updateVisible()
                }
                e.preventDefault();
                e.stopPropagation()
            }

            function a(e) {
                if (e.ctrlKey) return true;
                M = e.shiftKey ? true : false;
                var t = M ? 10 : 1;
                switch (e.keyCode) {
                case 37:
                    o(e, -t, 0);
                    break;
                case 39:
                    o(e, t, 0);
                    break;
                case 38:
                    o(e, 0, -t);
                    break;
                case 40:
                    o(e, 0, t);
                    break;
                case 27:
                    D.release();
                    break;
                case 9:
                    return true
                }
                return nothing(e)
            }
            var t = e('<input type="radio" />').css({
                position: "absolute",
                left: "-30px"
            }).keypress(a).blur(i),
                n = e("<div />").css({
                    position: "absolute",
                    overflow: "hidden"
                }).append(t);
            if (s.keySupport) n.insertBefore(u);
            return {
                watchKeys: r
            }
        }();
        d.hide();
        ct(true);
        var ht = {
            animateTo: et,
            setSelect: tt,
            setOptions: ot,
            tellSelect: it,
            tellScaled: st,
            disable: ut,
            enable: at,
            cancel: ft,
            focus: H.watchKeys,
            getBounds: function () {
                return [a * x, f * T]
            },
            getWidgetSize: function () {
                return [a, f]
            },
            release: D.release,
            destroy: lt
        };
        o.data("Jcrop", ht);
        return ht
    };
    e.fn.Jcrop = function (t) {
        function n(n) {
            var r = t.useImg || n.src;
            var i = new Image;
            i.onload = function () {
                e.Jcrop(n, t)
            };
            i.src = r
        }
        if (typeof t !== "object") t = {};
        this.each(function () {
            if (e(this).data("Jcrop")) {
                if (t == "api") return e(this).data("Jcrop");
                else e(this).data("Jcrop").setOptions(t)
            } else n(this)
        });
        return this
    }
})(jQuery)